---
name: Validate definitions
on:
  pull_request:
    branches:
      - master
jobs:
  format-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: '3.12'
      - name: cache virtualenv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.pythonLocation }}-
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Run Ruff Formatting and Checks
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check"
  test:
    runs-on: ubuntu-latest
    needs: [format-checks]
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: '3.12'
      - name: cache virtualenv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.pythonLocation }}-
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pytest-github-actions-annotate-failures
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Run Test Cases
        id: pytest
        run: pytest --tb=short -v
